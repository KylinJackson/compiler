<?xml version="1.0"?>
<procedure><subProcedure><terminal>begin</terminal><declarationStatementTable><declarationStatementTable><declarationStatement><variableDeclaration><terminal>integer</terminal><variableQuantity><symbol><letter>m</letter></symbol></variableQuantity></variableDeclaration></declarationStatement></declarationStatementTable><terminal>;</terminal><declarationStatement><functionDeclaration><terminal>integer</terminal><terminal>function</terminal><symbol><letter>F</letter></symbol><terminal>(</terminal><parameter><variableQuantity><symbol><letter>n</letter></symbol></variableQuantity></parameter><terminal>)</terminal><terminal>;</terminal><functionBody><terminal>begin</terminal><declarationStatementTable><declarationStatement><variableDeclaration><terminal>integer</terminal><variableQuantity><symbol><letter>n</letter></symbol></variableQuantity></variableDeclaration></declarationStatement></declarationStatementTable><terminal>;</terminal><executeStatementTable><executeStatement><conditionalStatement><terminal>if</terminal><conditionalExpression><arithmeticFaultAccess><term><factor><variableQuantity><symbol><letter>n</letter></symbol></variableQuantity></factor></term></arithmeticFaultAccess><relationOperator>&lt;=</relationOperator><arithmeticFaultAccess><term><factor><constant><unsignedInteger><number>0</number></unsignedInteger></constant></factor></term></arithmeticFaultAccess></conditionalExpression><terminal>then</terminal><executeStatement><assignmentStatement><variableQuantity><symbol><letter>F</letter></symbol></variableQuantity><terminal>:=</terminal><arithmeticFaultAccess><term><factor><constant><unsignedInteger><number>1</number></unsignedInteger></constant></factor></term></arithmeticFaultAccess></assignmentStatement></executeStatement><terminal>else</terminal><executeStatement><assignmentStatement><variableQuantity><symbol><letter>F</letter></symbol></variableQuantity><terminal>:=</terminal><arithmeticFaultAccess><term><term><factor><variableQuantity><symbol><letter>n</letter></symbol></variableQuantity></factor></term><terminal>*</terminal><factor><functionCall><symbol><letter>F</letter></symbol><terminal>(</terminal><arithmeticFaultAccess><arithmeticFaultAccess><term><factor><variableQuantity><symbol><letter>n</letter></symbol></variableQuantity></factor></term></arithmeticFaultAccess><terminal>-</terminal><term><factor><constant><unsignedInteger><number>1</number></unsignedInteger></constant></factor></term></arithmeticFaultAccess><terminal>)</terminal></functionCall></factor></term></arithmeticFaultAccess></assignmentStatement></executeStatement></conditionalStatement></executeStatement></executeStatementTable><terminal>end</terminal></functionBody></functionDeclaration></declarationStatement></declarationStatementTable><terminal>;</terminal><executeStatementTable><executeStatementTable><executeStatementTable><executeStatement><readStatement><terminal>read</terminal><terminal>(</terminal><variableQuantity><symbol><letter>m</letter></symbol></variableQuantity><terminal>)</terminal></readStatement></executeStatement></executeStatementTable><terminal>;</terminal><executeStatement><assignmentStatement><variableQuantity><symbol><letter>m</letter></symbol></variableQuantity><terminal>:=</terminal><arithmeticFaultAccess><term><factor><functionCall><symbol><letter>F</letter></symbol><terminal>(</terminal><arithmeticFaultAccess><term><factor><variableQuantity><symbol><letter>m</letter></symbol></variableQuantity></factor></term></arithmeticFaultAccess><terminal>)</terminal></functionCall></factor></term></arithmeticFaultAccess></assignmentStatement></executeStatement></executeStatementTable><terminal>;</terminal><executeStatement><writeStatement><terminal>write</terminal><terminal>(</terminal><variableQuantity><symbol><letter>m</letter></symbol></variableQuantity><terminal>)</terminal></writeStatement></executeStatement></executeStatementTable><terminal>end</terminal></subProcedure></procedure>
